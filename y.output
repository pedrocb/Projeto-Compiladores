Terminals unused in grammar

   RESERVED


Grammar

    0 $accept: Start $end

    1 Start: Block Block_

    2 Epsilon: %empty

    3 Block: FunctionDefinition
    4      | FunctionDeclaration
    5      | Declaration

    6 Block_: Epsilon
    7       | Block Block_

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    9 FunctionBody: LBRACE Declaration Declaration_ GoodStatement Statement_ RBRACE
   10             | LBRACE GoodStatement Statement_ RBRACE
   11             | LBRACE Declaration Declaration_ RBRACE
   12             | LBRACE RBRACE
   13             | LBRACE error RBRACE

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   15 FunctionDeclarator: Ast_ ID LPAR ParameterList RPAR

   16 ParameterList: ParameterDeclaration ParameterDeclaration_

   17 ParameterDeclaration: TypeSpec Ast_ IdOptional

   18 ParameterDeclaration_: Epsilon
   19                      | ParameterDeclaration_ COMMA ParameterDeclaration

   20 Declaration: TypeSpec Declarator Declarator_ SEMI
   21            | error SEMI

   22 Declaration_: Epsilon
   23             | Declaration Declaration_

   24 TypeSpec: CHAR
   25         | INT
   26         | VOID

   27 Declarator: Ast_ ID ArrayOptional

   28 ArrayOptional: Epsilon
   29              | LSQ INTLIT RSQ

   30 Declarator_: Epsilon
   31            | Declarator_ COMMA Declarator

   32 Statement_: Epsilon
   33           | StatementList

   34 StatementList: Statement Statement_

   35 Statement: error SEMI
   36          | GoodStatement

   37 GoodStatement: ExprOptional SEMI
   38              | LBRACE StatementList RBRACE
   39              | IfElseStatement
   40              | FOR LPAR ExprOptional SEMI ExprOptional SEMI ExprOptional RPAR Statement
   41              | RETURN ExprOptional SEMI
   42              | LBRACE error RBRACE
   43              | LBRACE RBRACE

   44 IfElseStatement: IF LPAR Expr RPAR Statement
   45                | IF LPAR Expr RPAR Statement ELSE Statement

   46 Expr: Expr COMMA AssignExpr
   47     | Expr_without_comma

   48 Expr_without_comma: ID LPAR error RPAR
   49                   | LPAR error RPAR
   50                   | AssignExpr

   51 Expr_without_comma_: Epsilon
   52                    | COMMA Expr_without_comma Expr_without_comma_

   53 AssignExpr: SingleExpr ASSIGN AssignExpr
   54           | SingleExpr

   55 SingleExpr: SingleExpr OR TestExpr
   56           | TestExpr

   57 TestExpr: TestExpr AND BinaryExpr
   58         | BinaryExpr

   59 BinaryExpr: BinaryExpr EQ RelationExpr
   60           | BinaryExpr NE RelationExpr
   61           | RelationExpr

   62 RelationExpr: RelationExpr LT ComparationExpr
   63             | RelationExpr GT ComparationExpr
   64             | RelationExpr LE ComparationExpr
   65             | RelationExpr GE ComparationExpr
   66             | ComparationExpr

   67 ComparationExpr: ComparationExpr PLUS Term
   68                | ComparationExpr MINUS Term
   69                | Term

   70 Term: Term AST Factor
   71     | Term DIV Factor
   72     | Term MOD Factor
   73     | Factor

   74 Factor: AMP Factor
   75       | AST Factor
   76       | PLUS Factor
   77       | MINUS Factor
   78       | NOT Factor
   79       | Subfactor

   80 Subfactor: Subfactor LSQ Expr RSQ
   81          | FunctionCall

   82 FunctionCall: ID LPAR ListExprOptional RPAR
   83             | Terminator

   84 Terminator: ID
   85           | INTLIT
   86           | CHRLIT
   87           | STRLIT
   88           | LPAR Expr RPAR

   89 ListExprOptional: Epsilon
   90                 | Expr_without_comma Expr_without_comma_

   91 ExprOptional: Epsilon
   92             | Expr

   93 IdOptional: Epsilon
   94           | ID

   95 Ast_: Epsilon
   96     | AST Ast_


Terminals, with rules where they appear

$end (0) 0
error (256) 13 21 35 42 48 49
AMP (258) 74
AND (259) 57
ASSIGN (260) 53
AST (261) 70 75 96
CHAR (262) 24
COMMA (263) 19 31 46 52
DIV (264) 71
ELSE (265) 45
EQ (266) 59
FOR (267) 40
GE (268) 65
GT (269) 63
IF (270) 44 45
INT (271) 25
LBRACE (272) 9 10 11 12 13 38 42 43
LE (273) 64
LPAR (274) 15 40 44 45 48 49 82 88
LSQ (275) 29 80
LT (276) 62
MINUS (277) 68 77
MOD (278) 72
NE (279) 60
NOT (280) 78
OR (281) 55
PLUS (282) 67 76
RBRACE (283) 9 10 11 12 13 38 42 43
RETURN (284) 41
RPAR (285) 15 40 44 45 48 49 82 88
RSQ (286) 29 80
SEMI (287) 14 20 21 35 37 40 41
VOID (288) 26
RESERVED (289)
ID (290) 15 27 48 82 84 94
STRLIT (291) 87
CHRLIT (292) 86
INTLIT (293) 29 85
IFCENAS (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Start (41)
    on left: 1, on right: 0
Epsilon (42)
    on left: 2, on right: 6 18 22 28 30 32 51 89 91 93 95
Block (43)
    on left: 3 4 5, on right: 1 7
Block_ (44)
    on left: 6 7, on right: 1 7
FunctionDefinition (45)
    on left: 8, on right: 3
FunctionBody (46)
    on left: 9 10 11 12 13, on right: 8
FunctionDeclaration (47)
    on left: 14, on right: 4
FunctionDeclarator (48)
    on left: 15, on right: 8 14
ParameterList (49)
    on left: 16, on right: 15
ParameterDeclaration (50)
    on left: 17, on right: 16 19
ParameterDeclaration_ (51)
    on left: 18 19, on right: 16 19
Declaration (52)
    on left: 20 21, on right: 5 9 11 23
Declaration_ (53)
    on left: 22 23, on right: 9 11 23
TypeSpec (54)
    on left: 24 25 26, on right: 8 14 17 20
Declarator (55)
    on left: 27, on right: 20 31
ArrayOptional (56)
    on left: 28 29, on right: 27
Declarator_ (57)
    on left: 30 31, on right: 20 31
Statement_ (58)
    on left: 32 33, on right: 9 10 34
StatementList (59)
    on left: 34, on right: 33 38
Statement (60)
    on left: 35 36, on right: 34 40 44 45
GoodStatement (61)
    on left: 37 38 39 40 41 42 43, on right: 9 10 36
IfElseStatement (62)
    on left: 44 45, on right: 39
Expr (63)
    on left: 46 47, on right: 44 45 46 80 88 92
Expr_without_comma (64)
    on left: 48 49 50, on right: 47 52 90
Expr_without_comma_ (65)
    on left: 51 52, on right: 52 90
AssignExpr (66)
    on left: 53 54, on right: 46 50 53
SingleExpr (67)
    on left: 55 56, on right: 53 54 55
TestExpr (68)
    on left: 57 58, on right: 55 56 57
BinaryExpr (69)
    on left: 59 60 61, on right: 57 58 59 60
RelationExpr (70)
    on left: 62 63 64 65 66, on right: 59 60 61 62 63 64 65
ComparationExpr (71)
    on left: 67 68 69, on right: 62 63 64 65 66 67 68
Term (72)
    on left: 70 71 72 73, on right: 67 68 69 70 71 72
Factor (73)
    on left: 74 75 76 77 78 79, on right: 70 71 72 73 74 75 76 77 78
Subfactor (74)
    on left: 80 81, on right: 79 80
FunctionCall (75)
    on left: 82 83, on right: 81
Terminator (76)
    on left: 84 85 86 87 88, on right: 83
ListExprOptional (77)
    on left: 89 90, on right: 82
ExprOptional (78)
    on left: 91 92, on right: 37 40 41
IdOptional (79)
    on left: 93 94, on right: 17
Ast_ (80)
    on left: 95 96, on right: 15 17 27 96


State 0

    0 $accept: . Start $end

    error  shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    Start                go to state 5
    Block                go to state 6
    FunctionDefinition   go to state 7
    FunctionDeclaration  go to state 8
    Declaration          go to state 9
    TypeSpec             go to state 10


State 1

   21 Declaration: error . SEMI

    SEMI  shift, and go to state 11


State 2

   24 TypeSpec: CHAR .

    $default  reduce using rule 24 (TypeSpec)


State 3

   25 TypeSpec: INT .

    $default  reduce using rule 25 (TypeSpec)


State 4

   26 TypeSpec: VOID .

    $default  reduce using rule 26 (TypeSpec)


State 5

    0 $accept: Start . $end

    $end  shift, and go to state 12


State 6

    1 Start: Block . Block_

    error  shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    $end  reduce using rule 2 (Epsilon)

    Epsilon              go to state 13
    Block                go to state 14
    Block_               go to state 15
    FunctionDefinition   go to state 7
    FunctionDeclaration  go to state 8
    Declaration          go to state 9
    TypeSpec             go to state 10


State 7

    3 Block: FunctionDefinition .

    $default  reduce using rule 3 (Block)


State 8

    4 Block: FunctionDeclaration .

    $default  reduce using rule 4 (Block)


State 9

    5 Block: Declaration .

    $default  reduce using rule 5 (Block)


State 10

    8 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
   14 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   20 Declaration: TypeSpec . Declarator Declarator_ SEMI

    AST  shift, and go to state 16

    $default  reduce using rule 2 (Epsilon)

    Epsilon             go to state 17
    FunctionDeclarator  go to state 18
    Declarator          go to state 19
    Ast_                go to state 20


State 11

   21 Declaration: error SEMI .

    $default  reduce using rule 21 (Declaration)


State 12

    0 $accept: Start $end .

    $default  accept


State 13

    6 Block_: Epsilon .

    $default  reduce using rule 6 (Block_)


State 14

    7 Block_: Block . Block_

    error  shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    $end  reduce using rule 2 (Epsilon)

    Epsilon              go to state 13
    Block                go to state 14
    Block_               go to state 21
    FunctionDefinition   go to state 7
    FunctionDeclaration  go to state 8
    Declaration          go to state 9
    TypeSpec             go to state 10


State 15

    1 Start: Block Block_ .

    $default  reduce using rule 1 (Start)


State 16

   96 Ast_: AST . Ast_

    AST  shift, and go to state 16

    $default  reduce using rule 2 (Epsilon)

    Epsilon  go to state 17
    Ast_     go to state 22


State 17

   95 Ast_: Epsilon .

    $default  reduce using rule 95 (Ast_)


State 18

    8 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
   14 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 23
    SEMI    shift, and go to state 24

    FunctionBody  go to state 25


State 19

   20 Declaration: TypeSpec Declarator . Declarator_ SEMI

    $default  reduce using rule 2 (Epsilon)

    Epsilon      go to state 26
    Declarator_  go to state 27


State 20

   15 FunctionDeclarator: Ast_ . ID LPAR ParameterList RPAR
   27 Declarator: Ast_ . ID ArrayOptional

    ID  shift, and go to state 28


State 21

    7 Block_: Block Block_ .

    $default  reduce using rule 7 (Block_)


State 22

   96 Ast_: AST Ast_ .

    $default  reduce using rule 96 (Ast_)


State 23

    9 FunctionBody: LBRACE . Declaration Declaration_ GoodStatement Statement_ RBRACE
   10             | LBRACE . GoodStatement Statement_ RBRACE
   11             | LBRACE . Declaration Declaration_ RBRACE
   12             | LBRACE . RBRACE
   13             | LBRACE . error RBRACE

    error   shift, and go to state 29
    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    CHAR    shift, and go to state 2
    FOR     shift, and go to state 32
    IF      shift, and go to state 33
    INT     shift, and go to state 3
    LBRACE  shift, and go to state 34
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    RBRACE  shift, and go to state 39
    RETURN  shift, and go to state 40
    VOID    shift, and go to state 4
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    SEMI  reduce using rule 2 (Epsilon)

    Epsilon             go to state 45
    Declaration         go to state 46
    TypeSpec            go to state 47
    GoodStatement       go to state 48
    IfElseStatement     go to state 49
    Expr                go to state 50
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ExprOptional        go to state 63


State 24

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 14 (FunctionDeclaration)


State 25

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 8 (FunctionDefinition)


State 26

   30 Declarator_: Epsilon .

    $default  reduce using rule 30 (Declarator_)


State 27

   20 Declaration: TypeSpec Declarator Declarator_ . SEMI
   31 Declarator_: Declarator_ . COMMA Declarator

    COMMA  shift, and go to state 64
    SEMI   shift, and go to state 65


State 28

   15 FunctionDeclarator: Ast_ ID . LPAR ParameterList RPAR
   27 Declarator: Ast_ ID . ArrayOptional

    LPAR  shift, and go to state 66
    LSQ   shift, and go to state 67

    $default  reduce using rule 2 (Epsilon)

    Epsilon        go to state 68
    ArrayOptional  go to state 69


State 29

   13 FunctionBody: LBRACE error . RBRACE
   21 Declaration: error . SEMI

    RBRACE  shift, and go to state 70
    SEMI    shift, and go to state 11


State 30

   74 Factor: AMP . Factor

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Factor        go to state 73
    Subfactor     go to state 60
    FunctionCall  go to state 61
    Terminator    go to state 62


State 31

   75 Factor: AST . Factor

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Factor        go to state 74
    Subfactor     go to state 60
    FunctionCall  go to state 61
    Terminator    go to state 62


State 32

   40 GoodStatement: FOR . LPAR ExprOptional SEMI ExprOptional SEMI ExprOptional RPAR Statement

    LPAR  shift, and go to state 75


State 33

   44 IfElseStatement: IF . LPAR Expr RPAR Statement
   45                | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 76


State 34

   38 GoodStatement: LBRACE . StatementList RBRACE
   42              | LBRACE . error RBRACE
   43              | LBRACE . RBRACE

    error   shift, and go to state 77
    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    FOR     shift, and go to state 32
    IF      shift, and go to state 33
    LBRACE  shift, and go to state 34
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    RBRACE  shift, and go to state 78
    RETURN  shift, and go to state 40
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    SEMI  reduce using rule 2 (Epsilon)

    Epsilon             go to state 45
    StatementList       go to state 79
    Statement           go to state 80
    GoodStatement       go to state 81
    IfElseStatement     go to state 49
    Expr                go to state 50
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ExprOptional        go to state 63


State 35

   49 Expr_without_comma: LPAR . error RPAR
   88 Terminator: LPAR . Expr RPAR

    error   shift, and go to state 82
    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Expr                go to state 83
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62


State 36

   77 Factor: MINUS . Factor

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Factor        go to state 84
    Subfactor     go to state 60
    FunctionCall  go to state 61
    Terminator    go to state 62


State 37

   78 Factor: NOT . Factor

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Factor        go to state 85
    Subfactor     go to state 60
    FunctionCall  go to state 61
    Terminator    go to state 62


State 38

   76 Factor: PLUS . Factor

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Factor        go to state 86
    Subfactor     go to state 60
    FunctionCall  go to state 61
    Terminator    go to state 62


State 39

   12 FunctionBody: LBRACE RBRACE .

    $default  reduce using rule 12 (FunctionBody)


State 40

   41 GoodStatement: RETURN . ExprOptional SEMI

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    $default  reduce using rule 2 (Epsilon)

    Epsilon             go to state 45
    Expr                go to state 50
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ExprOptional        go to state 87


State 41

   48 Expr_without_comma: ID . LPAR error RPAR
   82 FunctionCall: ID . LPAR ListExprOptional RPAR
   84 Terminator: ID .

    LPAR  shift, and go to state 88

    $default  reduce using rule 84 (Terminator)


State 42

   87 Terminator: STRLIT .

    $default  reduce using rule 87 (Terminator)


State 43

   86 Terminator: CHRLIT .

    $default  reduce using rule 86 (Terminator)


State 44

   85 Terminator: INTLIT .

    $default  reduce using rule 85 (Terminator)


State 45

   91 ExprOptional: Epsilon .

    $default  reduce using rule 91 (ExprOptional)


State 46

    9 FunctionBody: LBRACE Declaration . Declaration_ GoodStatement Statement_ RBRACE
   11             | LBRACE Declaration . Declaration_ RBRACE

    error  shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    AMP     reduce using rule 2 (Epsilon)
    AST     reduce using rule 2 (Epsilon)
    FOR     reduce using rule 2 (Epsilon)
    IF      reduce using rule 2 (Epsilon)
    LBRACE  reduce using rule 2 (Epsilon)
    LPAR    reduce using rule 2 (Epsilon)
    MINUS   reduce using rule 2 (Epsilon)
    NOT     reduce using rule 2 (Epsilon)
    PLUS    reduce using rule 2 (Epsilon)
    RBRACE  reduce using rule 2 (Epsilon)
    RETURN  reduce using rule 2 (Epsilon)
    SEMI    reduce using rule 2 (Epsilon)
    ID      reduce using rule 2 (Epsilon)
    STRLIT  reduce using rule 2 (Epsilon)
    CHRLIT  reduce using rule 2 (Epsilon)
    INTLIT  reduce using rule 2 (Epsilon)

    Epsilon       go to state 89
    Declaration   go to state 90
    Declaration_  go to state 91
    TypeSpec      go to state 47


State 47

   20 Declaration: TypeSpec . Declarator Declarator_ SEMI

    AST  shift, and go to state 16

    $default  reduce using rule 2 (Epsilon)

    Epsilon     go to state 17
    Declarator  go to state 19
    Ast_        go to state 92


State 48

   10 FunctionBody: LBRACE GoodStatement . Statement_ RBRACE

    error   shift, and go to state 93
    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    FOR     shift, and go to state 32
    IF      shift, and go to state 33
    LBRACE  shift, and go to state 34
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    RETURN  shift, and go to state 40
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    RBRACE  reduce using rule 2 (Epsilon)
    SEMI    reduce using rule 2 (Epsilon)

    Epsilon             go to state 94
    Statement_          go to state 95
    StatementList       go to state 96
    Statement           go to state 80
    GoodStatement       go to state 81
    IfElseStatement     go to state 49
    Expr                go to state 50
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ExprOptional        go to state 63


State 49

   39 GoodStatement: IfElseStatement .

    $default  reduce using rule 39 (GoodStatement)


State 50

   46 Expr: Expr . COMMA AssignExpr
   92 ExprOptional: Expr .

    COMMA  shift, and go to state 97

    $default  reduce using rule 92 (ExprOptional)


State 51

   47 Expr: Expr_without_comma .

    $default  reduce using rule 47 (Expr)


State 52

   50 Expr_without_comma: AssignExpr .

    $default  reduce using rule 50 (Expr_without_comma)


State 53

   53 AssignExpr: SingleExpr . ASSIGN AssignExpr
   54           | SingleExpr .
   55 SingleExpr: SingleExpr . OR TestExpr

    ASSIGN  shift, and go to state 98
    OR      shift, and go to state 99

    $default  reduce using rule 54 (AssignExpr)


State 54

   56 SingleExpr: TestExpr .
   57 TestExpr: TestExpr . AND BinaryExpr

    AND  shift, and go to state 100

    $default  reduce using rule 56 (SingleExpr)


State 55

   58 TestExpr: BinaryExpr .
   59 BinaryExpr: BinaryExpr . EQ RelationExpr
   60           | BinaryExpr . NE RelationExpr

    EQ  shift, and go to state 101
    NE  shift, and go to state 102

    $default  reduce using rule 58 (TestExpr)


State 56

   61 BinaryExpr: RelationExpr .
   62 RelationExpr: RelationExpr . LT ComparationExpr
   63             | RelationExpr . GT ComparationExpr
   64             | RelationExpr . LE ComparationExpr
   65             | RelationExpr . GE ComparationExpr

    GE  shift, and go to state 103
    GT  shift, and go to state 104
    LE  shift, and go to state 105
    LT  shift, and go to state 106

    $default  reduce using rule 61 (BinaryExpr)


State 57

   66 RelationExpr: ComparationExpr .
   67 ComparationExpr: ComparationExpr . PLUS Term
   68                | ComparationExpr . MINUS Term

    MINUS  shift, and go to state 107
    PLUS   shift, and go to state 108

    $default  reduce using rule 66 (RelationExpr)


State 58

   69 ComparationExpr: Term .
   70 Term: Term . AST Factor
   71     | Term . DIV Factor
   72     | Term . MOD Factor

    AST  shift, and go to state 109
    DIV  shift, and go to state 110
    MOD  shift, and go to state 111

    $default  reduce using rule 69 (ComparationExpr)


State 59

   73 Term: Factor .

    $default  reduce using rule 73 (Term)


State 60

   79 Factor: Subfactor .
   80 Subfactor: Subfactor . LSQ Expr RSQ

    LSQ  shift, and go to state 112

    $default  reduce using rule 79 (Factor)


State 61

   81 Subfactor: FunctionCall .

    $default  reduce using rule 81 (Subfactor)


State 62

   83 FunctionCall: Terminator .

    $default  reduce using rule 83 (FunctionCall)


State 63

   37 GoodStatement: ExprOptional . SEMI

    SEMI  shift, and go to state 113


State 64

   31 Declarator_: Declarator_ COMMA . Declarator

    AST  shift, and go to state 16

    $default  reduce using rule 2 (Epsilon)

    Epsilon     go to state 17
    Declarator  go to state 114
    Ast_        go to state 92


State 65

   20 Declaration: TypeSpec Declarator Declarator_ SEMI .

    $default  reduce using rule 20 (Declaration)


State 66

   15 FunctionDeclarator: Ast_ ID LPAR . ParameterList RPAR

    CHAR  shift, and go to state 2
    INT   shift, and go to state 3
    VOID  shift, and go to state 4

    ParameterList         go to state 115
    ParameterDeclaration  go to state 116
    TypeSpec              go to state 117


State 67

   29 ArrayOptional: LSQ . INTLIT RSQ

    INTLIT  shift, and go to state 118


State 68

   28 ArrayOptional: Epsilon .

    $default  reduce using rule 28 (ArrayOptional)


State 69

   27 Declarator: Ast_ ID ArrayOptional .

    $default  reduce using rule 27 (Declarator)


State 70

   13 FunctionBody: LBRACE error RBRACE .

    $default  reduce using rule 13 (FunctionBody)


State 71

   88 Terminator: LPAR . Expr RPAR

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Expr                go to state 83
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62


State 72

   82 FunctionCall: ID . LPAR ListExprOptional RPAR
   84 Terminator: ID .

    LPAR  shift, and go to state 119

    $default  reduce using rule 84 (Terminator)


State 73

   74 Factor: AMP Factor .

    $default  reduce using rule 74 (Factor)


State 74

   75 Factor: AST Factor .

    $default  reduce using rule 75 (Factor)


State 75

   40 GoodStatement: FOR LPAR . ExprOptional SEMI ExprOptional SEMI ExprOptional RPAR Statement

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    $default  reduce using rule 2 (Epsilon)

    Epsilon             go to state 45
    Expr                go to state 50
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ExprOptional        go to state 120


State 76

   44 IfElseStatement: IF LPAR . Expr RPAR Statement
   45                | IF LPAR . Expr RPAR Statement ELSE Statement

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Expr                go to state 121
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62


State 77

   35 Statement: error . SEMI
   42 GoodStatement: LBRACE error . RBRACE

    RBRACE  shift, and go to state 122
    SEMI    shift, and go to state 123


State 78

   43 GoodStatement: LBRACE RBRACE .

    $default  reduce using rule 43 (GoodStatement)


State 79

   38 GoodStatement: LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 124


State 80

   34 StatementList: Statement . Statement_

    error   shift, and go to state 93
    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    FOR     shift, and go to state 32
    IF      shift, and go to state 33
    LBRACE  shift, and go to state 34
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    RETURN  shift, and go to state 40
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    RBRACE  reduce using rule 2 (Epsilon)
    SEMI    reduce using rule 2 (Epsilon)

    Epsilon             go to state 94
    Statement_          go to state 125
    StatementList       go to state 96
    Statement           go to state 80
    GoodStatement       go to state 81
    IfElseStatement     go to state 49
    Expr                go to state 50
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ExprOptional        go to state 63


State 81

   36 Statement: GoodStatement .

    $default  reduce using rule 36 (Statement)


State 82

   49 Expr_without_comma: LPAR error . RPAR

    RPAR  shift, and go to state 126


State 83

   46 Expr: Expr . COMMA AssignExpr
   88 Terminator: LPAR Expr . RPAR

    COMMA  shift, and go to state 97
    RPAR   shift, and go to state 127


State 84

   77 Factor: MINUS Factor .

    $default  reduce using rule 77 (Factor)


State 85

   78 Factor: NOT Factor .

    $default  reduce using rule 78 (Factor)


State 86

   76 Factor: PLUS Factor .

    $default  reduce using rule 76 (Factor)


State 87

   41 GoodStatement: RETURN ExprOptional . SEMI

    SEMI  shift, and go to state 128


State 88

   48 Expr_without_comma: ID LPAR . error RPAR
   82 FunctionCall: ID LPAR . ListExprOptional RPAR

    error   shift, and go to state 129
    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    RPAR  reduce using rule 2 (Epsilon)

    Epsilon             go to state 130
    Expr_without_comma  go to state 131
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ListExprOptional    go to state 132


State 89

   22 Declaration_: Epsilon .

    $default  reduce using rule 22 (Declaration_)


State 90

   23 Declaration_: Declaration . Declaration_

    error  shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    AMP     reduce using rule 2 (Epsilon)
    AST     reduce using rule 2 (Epsilon)
    FOR     reduce using rule 2 (Epsilon)
    IF      reduce using rule 2 (Epsilon)
    LBRACE  reduce using rule 2 (Epsilon)
    LPAR    reduce using rule 2 (Epsilon)
    MINUS   reduce using rule 2 (Epsilon)
    NOT     reduce using rule 2 (Epsilon)
    PLUS    reduce using rule 2 (Epsilon)
    RBRACE  reduce using rule 2 (Epsilon)
    RETURN  reduce using rule 2 (Epsilon)
    SEMI    reduce using rule 2 (Epsilon)
    ID      reduce using rule 2 (Epsilon)
    STRLIT  reduce using rule 2 (Epsilon)
    CHRLIT  reduce using rule 2 (Epsilon)
    INTLIT  reduce using rule 2 (Epsilon)

    Epsilon       go to state 89
    Declaration   go to state 90
    Declaration_  go to state 133
    TypeSpec      go to state 47


State 91

    9 FunctionBody: LBRACE Declaration Declaration_ . GoodStatement Statement_ RBRACE
   11             | LBRACE Declaration Declaration_ . RBRACE

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    FOR     shift, and go to state 32
    IF      shift, and go to state 33
    LBRACE  shift, and go to state 34
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    RBRACE  shift, and go to state 134
    RETURN  shift, and go to state 40
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    $default  reduce using rule 2 (Epsilon)

    Epsilon             go to state 45
    GoodStatement       go to state 135
    IfElseStatement     go to state 49
    Expr                go to state 50
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ExprOptional        go to state 63


State 92

   27 Declarator: Ast_ . ID ArrayOptional

    ID  shift, and go to state 136


State 93

   35 Statement: error . SEMI

    SEMI  shift, and go to state 123


State 94

   32 Statement_: Epsilon .
   91 ExprOptional: Epsilon .

    SEMI      reduce using rule 91 (ExprOptional)
    $default  reduce using rule 32 (Statement_)


State 95

   10 FunctionBody: LBRACE GoodStatement Statement_ . RBRACE

    RBRACE  shift, and go to state 137


State 96

   33 Statement_: StatementList .

    $default  reduce using rule 33 (Statement_)


State 97

   46 Expr: Expr COMMA . AssignExpr

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    AssignExpr       go to state 138
    SingleExpr       go to state 53
    TestExpr         go to state 54
    BinaryExpr       go to state 55
    RelationExpr     go to state 56
    ComparationExpr  go to state 57
    Term             go to state 58
    Factor           go to state 59
    Subfactor        go to state 60
    FunctionCall     go to state 61
    Terminator       go to state 62


State 98

   53 AssignExpr: SingleExpr ASSIGN . AssignExpr

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    AssignExpr       go to state 139
    SingleExpr       go to state 53
    TestExpr         go to state 54
    BinaryExpr       go to state 55
    RelationExpr     go to state 56
    ComparationExpr  go to state 57
    Term             go to state 58
    Factor           go to state 59
    Subfactor        go to state 60
    FunctionCall     go to state 61
    Terminator       go to state 62


State 99

   55 SingleExpr: SingleExpr OR . TestExpr

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    TestExpr         go to state 140
    BinaryExpr       go to state 55
    RelationExpr     go to state 56
    ComparationExpr  go to state 57
    Term             go to state 58
    Factor           go to state 59
    Subfactor        go to state 60
    FunctionCall     go to state 61
    Terminator       go to state 62


State 100

   57 TestExpr: TestExpr AND . BinaryExpr

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    BinaryExpr       go to state 141
    RelationExpr     go to state 56
    ComparationExpr  go to state 57
    Term             go to state 58
    Factor           go to state 59
    Subfactor        go to state 60
    FunctionCall     go to state 61
    Terminator       go to state 62


State 101

   59 BinaryExpr: BinaryExpr EQ . RelationExpr

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    RelationExpr     go to state 142
    ComparationExpr  go to state 57
    Term             go to state 58
    Factor           go to state 59
    Subfactor        go to state 60
    FunctionCall     go to state 61
    Terminator       go to state 62


State 102

   60 BinaryExpr: BinaryExpr NE . RelationExpr

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    RelationExpr     go to state 143
    ComparationExpr  go to state 57
    Term             go to state 58
    Factor           go to state 59
    Subfactor        go to state 60
    FunctionCall     go to state 61
    Terminator       go to state 62


State 103

   65 RelationExpr: RelationExpr GE . ComparationExpr

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    ComparationExpr  go to state 144
    Term             go to state 58
    Factor           go to state 59
    Subfactor        go to state 60
    FunctionCall     go to state 61
    Terminator       go to state 62


State 104

   63 RelationExpr: RelationExpr GT . ComparationExpr

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    ComparationExpr  go to state 145
    Term             go to state 58
    Factor           go to state 59
    Subfactor        go to state 60
    FunctionCall     go to state 61
    Terminator       go to state 62


State 105

   64 RelationExpr: RelationExpr LE . ComparationExpr

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    ComparationExpr  go to state 146
    Term             go to state 58
    Factor           go to state 59
    Subfactor        go to state 60
    FunctionCall     go to state 61
    Terminator       go to state 62


State 106

   62 RelationExpr: RelationExpr LT . ComparationExpr

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    ComparationExpr  go to state 147
    Term             go to state 58
    Factor           go to state 59
    Subfactor        go to state 60
    FunctionCall     go to state 61
    Terminator       go to state 62


State 107

   68 ComparationExpr: ComparationExpr MINUS . Term

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Term          go to state 148
    Factor        go to state 59
    Subfactor     go to state 60
    FunctionCall  go to state 61
    Terminator    go to state 62


State 108

   67 ComparationExpr: ComparationExpr PLUS . Term

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Term          go to state 149
    Factor        go to state 59
    Subfactor     go to state 60
    FunctionCall  go to state 61
    Terminator    go to state 62


State 109

   70 Term: Term AST . Factor

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Factor        go to state 150
    Subfactor     go to state 60
    FunctionCall  go to state 61
    Terminator    go to state 62


State 110

   71 Term: Term DIV . Factor

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Factor        go to state 151
    Subfactor     go to state 60
    FunctionCall  go to state 61
    Terminator    go to state 62


State 111

   72 Term: Term MOD . Factor

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 71
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 72
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Factor        go to state 152
    Subfactor     go to state 60
    FunctionCall  go to state 61
    Terminator    go to state 62


State 112

   80 Subfactor: Subfactor LSQ . Expr RSQ

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Expr                go to state 153
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62


State 113

   37 GoodStatement: ExprOptional SEMI .

    $default  reduce using rule 37 (GoodStatement)


State 114

   31 Declarator_: Declarator_ COMMA Declarator .

    $default  reduce using rule 31 (Declarator_)


State 115

   15 FunctionDeclarator: Ast_ ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 154


State 116

   16 ParameterList: ParameterDeclaration . ParameterDeclaration_

    $default  reduce using rule 2 (Epsilon)

    Epsilon                go to state 155
    ParameterDeclaration_  go to state 156


State 117

   17 ParameterDeclaration: TypeSpec . Ast_ IdOptional

    AST  shift, and go to state 16

    $default  reduce using rule 2 (Epsilon)

    Epsilon  go to state 17
    Ast_     go to state 157


State 118

   29 ArrayOptional: LSQ INTLIT . RSQ

    RSQ  shift, and go to state 158


State 119

   82 FunctionCall: ID LPAR . ListExprOptional RPAR

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    $default  reduce using rule 2 (Epsilon)

    Epsilon             go to state 130
    Expr_without_comma  go to state 131
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ListExprOptional    go to state 132


State 120

   40 GoodStatement: FOR LPAR ExprOptional . SEMI ExprOptional SEMI ExprOptional RPAR Statement

    SEMI  shift, and go to state 159


State 121

   44 IfElseStatement: IF LPAR Expr . RPAR Statement
   45                | IF LPAR Expr . RPAR Statement ELSE Statement
   46 Expr: Expr . COMMA AssignExpr

    COMMA  shift, and go to state 97
    RPAR   shift, and go to state 160


State 122

   42 GoodStatement: LBRACE error RBRACE .

    $default  reduce using rule 42 (GoodStatement)


State 123

   35 Statement: error SEMI .

    $default  reduce using rule 35 (Statement)


State 124

   38 GoodStatement: LBRACE StatementList RBRACE .

    $default  reduce using rule 38 (GoodStatement)


State 125

   34 StatementList: Statement Statement_ .

    $default  reduce using rule 34 (StatementList)


State 126

   49 Expr_without_comma: LPAR error RPAR .

    $default  reduce using rule 49 (Expr_without_comma)


State 127

   88 Terminator: LPAR Expr RPAR .

    $default  reduce using rule 88 (Terminator)


State 128

   41 GoodStatement: RETURN ExprOptional SEMI .

    $default  reduce using rule 41 (GoodStatement)


State 129

   48 Expr_without_comma: ID LPAR error . RPAR

    RPAR  shift, and go to state 161


State 130

   89 ListExprOptional: Epsilon .

    $default  reduce using rule 89 (ListExprOptional)


State 131

   90 ListExprOptional: Expr_without_comma . Expr_without_comma_

    COMMA  shift, and go to state 162

    $default  reduce using rule 2 (Epsilon)

    Epsilon              go to state 163
    Expr_without_comma_  go to state 164


State 132

   82 FunctionCall: ID LPAR ListExprOptional . RPAR

    RPAR  shift, and go to state 165


State 133

   23 Declaration_: Declaration Declaration_ .

    $default  reduce using rule 23 (Declaration_)


State 134

   11 FunctionBody: LBRACE Declaration Declaration_ RBRACE .

    $default  reduce using rule 11 (FunctionBody)


State 135

    9 FunctionBody: LBRACE Declaration Declaration_ GoodStatement . Statement_ RBRACE

    error   shift, and go to state 93
    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    FOR     shift, and go to state 32
    IF      shift, and go to state 33
    LBRACE  shift, and go to state 34
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    RETURN  shift, and go to state 40
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    RBRACE  reduce using rule 2 (Epsilon)
    SEMI    reduce using rule 2 (Epsilon)

    Epsilon             go to state 94
    Statement_          go to state 166
    StatementList       go to state 96
    Statement           go to state 80
    GoodStatement       go to state 81
    IfElseStatement     go to state 49
    Expr                go to state 50
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ExprOptional        go to state 63


State 136

   27 Declarator: Ast_ ID . ArrayOptional

    LSQ  shift, and go to state 67

    $default  reduce using rule 2 (Epsilon)

    Epsilon        go to state 68
    ArrayOptional  go to state 69


State 137

   10 FunctionBody: LBRACE GoodStatement Statement_ RBRACE .

    $default  reduce using rule 10 (FunctionBody)


State 138

   46 Expr: Expr COMMA AssignExpr .

    $default  reduce using rule 46 (Expr)


State 139

   53 AssignExpr: SingleExpr ASSIGN AssignExpr .

    $default  reduce using rule 53 (AssignExpr)


State 140

   55 SingleExpr: SingleExpr OR TestExpr .
   57 TestExpr: TestExpr . AND BinaryExpr

    AND  shift, and go to state 100

    $default  reduce using rule 55 (SingleExpr)


State 141

   57 TestExpr: TestExpr AND BinaryExpr .
   59 BinaryExpr: BinaryExpr . EQ RelationExpr
   60           | BinaryExpr . NE RelationExpr

    EQ  shift, and go to state 101
    NE  shift, and go to state 102

    $default  reduce using rule 57 (TestExpr)


State 142

   59 BinaryExpr: BinaryExpr EQ RelationExpr .
   62 RelationExpr: RelationExpr . LT ComparationExpr
   63             | RelationExpr . GT ComparationExpr
   64             | RelationExpr . LE ComparationExpr
   65             | RelationExpr . GE ComparationExpr

    GE  shift, and go to state 103
    GT  shift, and go to state 104
    LE  shift, and go to state 105
    LT  shift, and go to state 106

    $default  reduce using rule 59 (BinaryExpr)


State 143

   60 BinaryExpr: BinaryExpr NE RelationExpr .
   62 RelationExpr: RelationExpr . LT ComparationExpr
   63             | RelationExpr . GT ComparationExpr
   64             | RelationExpr . LE ComparationExpr
   65             | RelationExpr . GE ComparationExpr

    GE  shift, and go to state 103
    GT  shift, and go to state 104
    LE  shift, and go to state 105
    LT  shift, and go to state 106

    $default  reduce using rule 60 (BinaryExpr)


State 144

   65 RelationExpr: RelationExpr GE ComparationExpr .
   67 ComparationExpr: ComparationExpr . PLUS Term
   68                | ComparationExpr . MINUS Term

    MINUS  shift, and go to state 107
    PLUS   shift, and go to state 108

    $default  reduce using rule 65 (RelationExpr)


State 145

   63 RelationExpr: RelationExpr GT ComparationExpr .
   67 ComparationExpr: ComparationExpr . PLUS Term
   68                | ComparationExpr . MINUS Term

    MINUS  shift, and go to state 107
    PLUS   shift, and go to state 108

    $default  reduce using rule 63 (RelationExpr)


State 146

   64 RelationExpr: RelationExpr LE ComparationExpr .
   67 ComparationExpr: ComparationExpr . PLUS Term
   68                | ComparationExpr . MINUS Term

    MINUS  shift, and go to state 107
    PLUS   shift, and go to state 108

    $default  reduce using rule 64 (RelationExpr)


State 147

   62 RelationExpr: RelationExpr LT ComparationExpr .
   67 ComparationExpr: ComparationExpr . PLUS Term
   68                | ComparationExpr . MINUS Term

    MINUS  shift, and go to state 107
    PLUS   shift, and go to state 108

    $default  reduce using rule 62 (RelationExpr)


State 148

   68 ComparationExpr: ComparationExpr MINUS Term .
   70 Term: Term . AST Factor
   71     | Term . DIV Factor
   72     | Term . MOD Factor

    AST  shift, and go to state 109
    DIV  shift, and go to state 110
    MOD  shift, and go to state 111

    $default  reduce using rule 68 (ComparationExpr)


State 149

   67 ComparationExpr: ComparationExpr PLUS Term .
   70 Term: Term . AST Factor
   71     | Term . DIV Factor
   72     | Term . MOD Factor

    AST  shift, and go to state 109
    DIV  shift, and go to state 110
    MOD  shift, and go to state 111

    $default  reduce using rule 67 (ComparationExpr)


State 150

   70 Term: Term AST Factor .

    $default  reduce using rule 70 (Term)


State 151

   71 Term: Term DIV Factor .

    $default  reduce using rule 71 (Term)


State 152

   72 Term: Term MOD Factor .

    $default  reduce using rule 72 (Term)


State 153

   46 Expr: Expr . COMMA AssignExpr
   80 Subfactor: Subfactor LSQ Expr . RSQ

    COMMA  shift, and go to state 97
    RSQ    shift, and go to state 167


State 154

   15 FunctionDeclarator: Ast_ ID LPAR ParameterList RPAR .

    $default  reduce using rule 15 (FunctionDeclarator)


State 155

   18 ParameterDeclaration_: Epsilon .

    $default  reduce using rule 18 (ParameterDeclaration_)


State 156

   16 ParameterList: ParameterDeclaration ParameterDeclaration_ .
   19 ParameterDeclaration_: ParameterDeclaration_ . COMMA ParameterDeclaration

    COMMA  shift, and go to state 168

    $default  reduce using rule 16 (ParameterList)


State 157

   17 ParameterDeclaration: TypeSpec Ast_ . IdOptional

    ID  shift, and go to state 169

    $default  reduce using rule 2 (Epsilon)

    Epsilon     go to state 170
    IdOptional  go to state 171


State 158

   29 ArrayOptional: LSQ INTLIT RSQ .

    $default  reduce using rule 29 (ArrayOptional)


State 159

   40 GoodStatement: FOR LPAR ExprOptional SEMI . ExprOptional SEMI ExprOptional RPAR Statement

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    $default  reduce using rule 2 (Epsilon)

    Epsilon             go to state 45
    Expr                go to state 50
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ExprOptional        go to state 172


State 160

   44 IfElseStatement: IF LPAR Expr RPAR . Statement
   45                | IF LPAR Expr RPAR . Statement ELSE Statement

    error   shift, and go to state 93
    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    FOR     shift, and go to state 32
    IF      shift, and go to state 33
    LBRACE  shift, and go to state 34
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    RETURN  shift, and go to state 40
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    SEMI  reduce using rule 2 (Epsilon)

    Epsilon             go to state 45
    Statement           go to state 173
    GoodStatement       go to state 81
    IfElseStatement     go to state 49
    Expr                go to state 50
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ExprOptional        go to state 63


State 161

   48 Expr_without_comma: ID LPAR error RPAR .

    $default  reduce using rule 48 (Expr_without_comma)


State 162

   52 Expr_without_comma_: COMMA . Expr_without_comma Expr_without_comma_

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    Expr_without_comma  go to state 174
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62


State 163

   51 Expr_without_comma_: Epsilon .

    $default  reduce using rule 51 (Expr_without_comma_)


State 164

   90 ListExprOptional: Expr_without_comma Expr_without_comma_ .

    $default  reduce using rule 90 (ListExprOptional)


State 165

   82 FunctionCall: ID LPAR ListExprOptional RPAR .

    $default  reduce using rule 82 (FunctionCall)


State 166

    9 FunctionBody: LBRACE Declaration Declaration_ GoodStatement Statement_ . RBRACE

    RBRACE  shift, and go to state 175


State 167

   80 Subfactor: Subfactor LSQ Expr RSQ .

    $default  reduce using rule 80 (Subfactor)


State 168

   19 ParameterDeclaration_: ParameterDeclaration_ COMMA . ParameterDeclaration

    CHAR  shift, and go to state 2
    INT   shift, and go to state 3
    VOID  shift, and go to state 4

    ParameterDeclaration  go to state 176
    TypeSpec              go to state 117


State 169

   94 IdOptional: ID .

    $default  reduce using rule 94 (IdOptional)


State 170

   93 IdOptional: Epsilon .

    $default  reduce using rule 93 (IdOptional)


State 171

   17 ParameterDeclaration: TypeSpec Ast_ IdOptional .

    $default  reduce using rule 17 (ParameterDeclaration)


State 172

   40 GoodStatement: FOR LPAR ExprOptional SEMI ExprOptional . SEMI ExprOptional RPAR Statement

    SEMI  shift, and go to state 177


State 173

   44 IfElseStatement: IF LPAR Expr RPAR Statement .
   45                | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 178

    $default  reduce using rule 44 (IfElseStatement)


State 174

   52 Expr_without_comma_: COMMA Expr_without_comma . Expr_without_comma_

    COMMA  shift, and go to state 162

    $default  reduce using rule 2 (Epsilon)

    Epsilon              go to state 163
    Expr_without_comma_  go to state 179


State 175

    9 FunctionBody: LBRACE Declaration Declaration_ GoodStatement Statement_ RBRACE .

    $default  reduce using rule 9 (FunctionBody)


State 176

   19 ParameterDeclaration_: ParameterDeclaration_ COMMA ParameterDeclaration .

    $default  reduce using rule 19 (ParameterDeclaration_)


State 177

   40 GoodStatement: FOR LPAR ExprOptional SEMI ExprOptional SEMI . ExprOptional RPAR Statement

    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    $default  reduce using rule 2 (Epsilon)

    Epsilon             go to state 45
    Expr                go to state 50
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ExprOptional        go to state 180


State 178

   45 IfElseStatement: IF LPAR Expr RPAR Statement ELSE . Statement

    error   shift, and go to state 93
    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    FOR     shift, and go to state 32
    IF      shift, and go to state 33
    LBRACE  shift, and go to state 34
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    RETURN  shift, and go to state 40
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    SEMI  reduce using rule 2 (Epsilon)

    Epsilon             go to state 45
    Statement           go to state 181
    GoodStatement       go to state 81
    IfElseStatement     go to state 49
    Expr                go to state 50
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ExprOptional        go to state 63


State 179

   52 Expr_without_comma_: COMMA Expr_without_comma Expr_without_comma_ .

    $default  reduce using rule 52 (Expr_without_comma_)


State 180

   40 GoodStatement: FOR LPAR ExprOptional SEMI ExprOptional SEMI ExprOptional . RPAR Statement

    RPAR  shift, and go to state 182


State 181

   45 IfElseStatement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 45 (IfElseStatement)


State 182

   40 GoodStatement: FOR LPAR ExprOptional SEMI ExprOptional SEMI ExprOptional RPAR . Statement

    error   shift, and go to state 93
    AMP     shift, and go to state 30
    AST     shift, and go to state 31
    FOR     shift, and go to state 32
    IF      shift, and go to state 33
    LBRACE  shift, and go to state 34
    LPAR    shift, and go to state 35
    MINUS   shift, and go to state 36
    NOT     shift, and go to state 37
    PLUS    shift, and go to state 38
    RETURN  shift, and go to state 40
    ID      shift, and go to state 41
    STRLIT  shift, and go to state 42
    CHRLIT  shift, and go to state 43
    INTLIT  shift, and go to state 44

    SEMI  reduce using rule 2 (Epsilon)

    Epsilon             go to state 45
    Statement           go to state 183
    GoodStatement       go to state 81
    IfElseStatement     go to state 49
    Expr                go to state 50
    Expr_without_comma  go to state 51
    AssignExpr          go to state 52
    SingleExpr          go to state 53
    TestExpr            go to state 54
    BinaryExpr          go to state 55
    RelationExpr        go to state 56
    ComparationExpr     go to state 57
    Term                go to state 58
    Factor              go to state 59
    Subfactor           go to state 60
    FunctionCall        go to state 61
    Terminator          go to state 62
    ExprOptional        go to state 63


State 183

   40 GoodStatement: FOR LPAR ExprOptional SEMI ExprOptional SEMI ExprOptional RPAR Statement .

    $default  reduce using rule 40 (GoodStatement)
