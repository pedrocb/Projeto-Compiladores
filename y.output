Terminals unused in grammar

   RESERVED


Grammar

    0 $accept: Start $end

    1 Start: Block Block_

    2 Epsilon: %empty

    3 Block: FunctionDefinition
    4      | FunctionDeclaration
    5      | Declaration

    6 Block_: Epsilon
    7       | Block Block_

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    9 FunctionBody: LBRACE Declaration Declaration_ GoodStatement Statement_ RBRACE
   10             | LBRACE GoodStatement Statement_ RBRACE
   11             | LBRACE Declaration Declaration_ RBRACE
   12             | LBRACE RBRACE
   13             | LBRACE error RBRACE

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   15 FunctionDeclarator: Ast_ ID LPAR ParameterList RPAR

   16 ParameterList: ParameterDeclaration ParameterDeclaration_

   17 ParameterDeclaration: TypeSpec Ast_ IdOptional

   18 ParameterDeclaration_: Epsilon
   19                      | ParameterDeclaration_ COMMA ParameterDeclaration

   20 Declaration: TypeSpec Declarator Declarator_ SEMI
   21            | error SEMI

   22 Declaration_: Epsilon
   23             | Declaration Declaration_

   24 TypeSpec: CHAR
   25         | INT
   26         | VOID

   27 Declarator: Ast_ ID ArrayOptional

   28 ArrayOptional: Epsilon
   29              | LSQ INTLIT RSQ

   30 Declarator_: Epsilon
   31            | Declarator_ COMMA Declarator

   32 Statement_: Epsilon
   33           | StatementList

   34 StatementList: Statement Statement_

   35 Statement: error SEMI
   36          | GoodStatement

   37 GoodStatement: ExprOptional SEMI
   38              | LBRACE StatementList RBRACE
   39              | IfElseStatement
   40              | FOR LPAR ExprOptional SEMI ExprOptional SEMI ExprOptional RPAR Statement
   41              | RETURN ExprOptional SEMI
   42              | LBRACE error RBRACE
   43              | LBRACE RBRACE

   44 IfElseStatement: IF LPAR Expr RPAR Statement
   45                | IF LPAR Expr RPAR Statement ELSE Statement

   46 Expr: CommaExpr ASSIGN Expr
   47     | CommaExpr
   48     | ID LPAR error RPAR
   49     | LPAR error RPAR

   50 Expr_without_comma: ID LPAR error RPAR
   51                   | LPAR error RPAR
   52                   | SingleExpr
   53                   | SingleExpr ASSIGN Expr_without_comma

   54 Expr_without_comma_: Epsilon
   55                    | COMMA Expr_without_comma

   56 CommaExpr: CommaExpr COMMA SingleExpr
   57          | SingleExpr

   58 SingleExpr: SingleExpr AND BinaryExpr
   59           | SingleExpr OR BinaryExpr
   60           | BinaryExpr

   61 BinaryExpr: BinaryExpr EQ ComparationExpr
   62           | BinaryExpr NE ComparationExpr
   63           | BinaryExpr LT ComparationExpr
   64           | BinaryExpr GT ComparationExpr
   65           | BinaryExpr LE ComparationExpr
   66           | BinaryExpr GE ComparationExpr
   67           | ComparationExpr

   68 ComparationExpr: ComparationExpr PLUS Term
   69                | ComparationExpr MINUS Term
   70                | Term

   71 Term: Factor AST Term
   72     | Factor DIV Term
   73     | Factor MOD Term
   74     | Factor

   75 Factor: AMP Factor
   76       | AST Factor
   77       | PLUS Factor
   78       | MINUS Factor
   79       | NOT Factor
   80       | Subfactor

   81 Subfactor: Subfactor LSQ Expr RSQ
   82          | ID LPAR ListExprOptional RPAR
   83          | ID
   84          | INTLIT
   85          | CHRLIT
   86          | STRLIT
   87          | LPAR Expr RPAR

   88 ListExprOptional: Epsilon
   89                 | Expr_without_comma Expr_without_comma_

   90 ExprOptional: Epsilon
   91             | Expr

   92 IdOptional: Epsilon
   93           | ID

   94 Ast_: Epsilon
   95     | Ast_ AST


Terminals, with rules where they appear

$end (0) 0
error (256) 13 21 35 42 48 49 50 51
AMP (258) 75
AND (259) 58
ASSIGN (260) 46 53
AST (261) 71 76 95
CHAR (262) 24
COMMA (263) 19 31 55 56
DIV (264) 72
ELSE (265) 45
EQ (266) 61
FOR (267) 40
GE (268) 66
GT (269) 64
IF (270) 44 45
INT (271) 25
LBRACE (272) 9 10 11 12 13 38 42 43
LE (273) 65
LPAR (274) 15 40 44 45 48 49 50 51 82 87
LSQ (275) 29 81
LT (276) 63
MINUS (277) 69 78
MOD (278) 73
NE (279) 62
NOT (280) 79
OR (281) 59
PLUS (282) 68 77
RBRACE (283) 9 10 11 12 13 38 42 43
RETURN (284) 41
RPAR (285) 15 40 44 45 48 49 50 51 82 87
RSQ (286) 29 81
SEMI (287) 14 20 21 35 37 40 41
VOID (288) 26
RESERVED (289)
ID (290) 15 27 48 50 82 83 93
STRLIT (291) 86
CHRLIT (292) 85
INTLIT (293) 29 84
IFCENAS (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Start (41)
    on left: 1, on right: 0
Epsilon (42)
    on left: 2, on right: 6 18 22 28 30 32 54 88 90 92 94
Block (43)
    on left: 3 4 5, on right: 1 7
Block_ (44)
    on left: 6 7, on right: 1 7
FunctionDefinition (45)
    on left: 8, on right: 3
FunctionBody (46)
    on left: 9 10 11 12 13, on right: 8
FunctionDeclaration (47)
    on left: 14, on right: 4
FunctionDeclarator (48)
    on left: 15, on right: 8 14
ParameterList (49)
    on left: 16, on right: 15
ParameterDeclaration (50)
    on left: 17, on right: 16 19
ParameterDeclaration_ (51)
    on left: 18 19, on right: 16 19
Declaration (52)
    on left: 20 21, on right: 5 9 11 23
Declaration_ (53)
    on left: 22 23, on right: 9 11 23
TypeSpec (54)
    on left: 24 25 26, on right: 8 14 17 20
Declarator (55)
    on left: 27, on right: 20 31
ArrayOptional (56)
    on left: 28 29, on right: 27
Declarator_ (57)
    on left: 30 31, on right: 20 31
Statement_ (58)
    on left: 32 33, on right: 9 10 34
StatementList (59)
    on left: 34, on right: 33 38
Statement (60)
    on left: 35 36, on right: 34 40 44 45
GoodStatement (61)
    on left: 37 38 39 40 41 42 43, on right: 9 10 36
IfElseStatement (62)
    on left: 44 45, on right: 39
Expr (63)
    on left: 46 47 48 49, on right: 44 45 46 81 87 91
Expr_without_comma (64)
    on left: 50 51 52 53, on right: 53 55 89
Expr_without_comma_ (65)
    on left: 54 55, on right: 89
CommaExpr (66)
    on left: 56 57, on right: 46 47 56
SingleExpr (67)
    on left: 58 59 60, on right: 52 53 56 57 58 59
BinaryExpr (68)
    on left: 61 62 63 64 65 66 67, on right: 58 59 60 61 62 63 64 65
    66
ComparationExpr (69)
    on left: 68 69 70, on right: 61 62 63 64 65 66 67 68 69
Term (70)
    on left: 71 72 73 74, on right: 68 69 70 71 72 73
Factor (71)
    on left: 75 76 77 78 79 80, on right: 71 72 73 74 75 76 77 78 79
Subfactor (72)
    on left: 81 82 83 84 85 86 87, on right: 80 81
ListExprOptional (73)
    on left: 88 89, on right: 82
ExprOptional (74)
    on left: 90 91, on right: 37 40 41
IdOptional (75)
    on left: 92 93, on right: 17
Ast_ (76)
    on left: 94 95, on right: 15 17 27 95


State 0

    0 $accept: . Start $end

    error  shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    Start                go to state 5
    Block                go to state 6
    FunctionDefinition   go to state 7
    FunctionDeclaration  go to state 8
    Declaration          go to state 9
    TypeSpec             go to state 10


State 1

   21 Declaration: error . SEMI

    SEMI  shift, and go to state 11


State 2

   24 TypeSpec: CHAR .

    $default  reduce using rule 24 (TypeSpec)


State 3

   25 TypeSpec: INT .

    $default  reduce using rule 25 (TypeSpec)


State 4

   26 TypeSpec: VOID .

    $default  reduce using rule 26 (TypeSpec)


State 5

    0 $accept: Start . $end

    $end  shift, and go to state 12


State 6

    1 Start: Block . Block_

    error  shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    $end  reduce using rule 2 (Epsilon)

    Epsilon              go to state 13
    Block                go to state 14
    Block_               go to state 15
    FunctionDefinition   go to state 7
    FunctionDeclaration  go to state 8
    Declaration          go to state 9
    TypeSpec             go to state 10


State 7

    3 Block: FunctionDefinition .

    $default  reduce using rule 3 (Block)


State 8

    4 Block: FunctionDeclaration .

    $default  reduce using rule 4 (Block)


State 9

    5 Block: Declaration .

    $default  reduce using rule 5 (Block)


State 10

    8 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
   14 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   20 Declaration: TypeSpec . Declarator Declarator_ SEMI

    $default  reduce using rule 2 (Epsilon)

    Epsilon             go to state 16
    FunctionDeclarator  go to state 17
    Declarator          go to state 18
    Ast_                go to state 19


State 11

   21 Declaration: error SEMI .

    $default  reduce using rule 21 (Declaration)


State 12

    0 $accept: Start $end .

    $default  accept


State 13

    6 Block_: Epsilon .

    $default  reduce using rule 6 (Block_)


State 14

    7 Block_: Block . Block_

    error  shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    $end  reduce using rule 2 (Epsilon)

    Epsilon              go to state 13
    Block                go to state 14
    Block_               go to state 20
    FunctionDefinition   go to state 7
    FunctionDeclaration  go to state 8
    Declaration          go to state 9
    TypeSpec             go to state 10


State 15

    1 Start: Block Block_ .

    $default  reduce using rule 1 (Start)


State 16

   94 Ast_: Epsilon .

    $default  reduce using rule 94 (Ast_)


State 17

    8 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
   14 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 21
    SEMI    shift, and go to state 22

    FunctionBody  go to state 23


State 18

   20 Declaration: TypeSpec Declarator . Declarator_ SEMI

    $default  reduce using rule 2 (Epsilon)

    Epsilon      go to state 24
    Declarator_  go to state 25


State 19

   15 FunctionDeclarator: Ast_ . ID LPAR ParameterList RPAR
   27 Declarator: Ast_ . ID ArrayOptional
   95 Ast_: Ast_ . AST

    AST  shift, and go to state 26
    ID   shift, and go to state 27


State 20

    7 Block_: Block Block_ .

    $default  reduce using rule 7 (Block_)


State 21

    9 FunctionBody: LBRACE . Declaration Declaration_ GoodStatement Statement_ RBRACE
   10             | LBRACE . GoodStatement Statement_ RBRACE
   11             | LBRACE . Declaration Declaration_ RBRACE
   12             | LBRACE . RBRACE
   13             | LBRACE . error RBRACE

    error   shift, and go to state 28
    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    CHAR    shift, and go to state 2
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    INT     shift, and go to state 3
    LBRACE  shift, and go to state 33
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    RBRACE  shift, and go to state 38
    RETURN  shift, and go to state 39
    VOID    shift, and go to state 4
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    SEMI  reduce using rule 2 (Epsilon)

    Epsilon          go to state 44
    Declaration      go to state 45
    TypeSpec         go to state 46
    GoodStatement    go to state 47
    IfElseStatement  go to state 48
    Expr             go to state 49
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56
    ExprOptional     go to state 57


State 22

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 14 (FunctionDeclaration)


State 23

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 8 (FunctionDefinition)


State 24

   30 Declarator_: Epsilon .

    $default  reduce using rule 30 (Declarator_)


State 25

   20 Declaration: TypeSpec Declarator Declarator_ . SEMI
   31 Declarator_: Declarator_ . COMMA Declarator

    COMMA  shift, and go to state 58
    SEMI   shift, and go to state 59


State 26

   95 Ast_: Ast_ AST .

    $default  reduce using rule 95 (Ast_)


State 27

   15 FunctionDeclarator: Ast_ ID . LPAR ParameterList RPAR
   27 Declarator: Ast_ ID . ArrayOptional

    LPAR  shift, and go to state 60
    LSQ   shift, and go to state 61

    $default  reduce using rule 2 (Epsilon)

    Epsilon        go to state 62
    ArrayOptional  go to state 63


State 28

   13 FunctionBody: LBRACE error . RBRACE
   21 Declaration: error . SEMI

    RBRACE  shift, and go to state 64
    SEMI    shift, and go to state 11


State 29

   75 Factor: AMP . Factor

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Factor     go to state 67
    Subfactor  go to state 56


State 30

   76 Factor: AST . Factor

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Factor     go to state 68
    Subfactor  go to state 56


State 31

   40 GoodStatement: FOR . LPAR ExprOptional SEMI ExprOptional SEMI ExprOptional RPAR Statement

    LPAR  shift, and go to state 69


State 32

   44 IfElseStatement: IF . LPAR Expr RPAR Statement
   45                | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 70


State 33

   38 GoodStatement: LBRACE . StatementList RBRACE
   42              | LBRACE . error RBRACE
   43              | LBRACE . RBRACE

    error   shift, and go to state 71
    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    LBRACE  shift, and go to state 33
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    RBRACE  shift, and go to state 72
    RETURN  shift, and go to state 39
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    SEMI  reduce using rule 2 (Epsilon)

    Epsilon          go to state 44
    StatementList    go to state 73
    Statement        go to state 74
    GoodStatement    go to state 75
    IfElseStatement  go to state 48
    Expr             go to state 49
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56
    ExprOptional     go to state 57


State 34

   49 Expr: LPAR . error RPAR
   87 Subfactor: LPAR . Expr RPAR

    error   shift, and go to state 76
    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Expr             go to state 77
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 35

   78 Factor: MINUS . Factor

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Factor     go to state 78
    Subfactor  go to state 56


State 36

   79 Factor: NOT . Factor

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Factor     go to state 79
    Subfactor  go to state 56


State 37

   77 Factor: PLUS . Factor

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Factor     go to state 80
    Subfactor  go to state 56


State 38

   12 FunctionBody: LBRACE RBRACE .

    $default  reduce using rule 12 (FunctionBody)


State 39

   41 GoodStatement: RETURN . ExprOptional SEMI

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    $default  reduce using rule 2 (Epsilon)

    Epsilon          go to state 44
    Expr             go to state 49
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56
    ExprOptional     go to state 81


State 40

   48 Expr: ID . LPAR error RPAR
   82 Subfactor: ID . LPAR ListExprOptional RPAR
   83          | ID .

    LPAR  shift, and go to state 82

    $default  reduce using rule 83 (Subfactor)


State 41

   86 Subfactor: STRLIT .

    $default  reduce using rule 86 (Subfactor)


State 42

   85 Subfactor: CHRLIT .

    $default  reduce using rule 85 (Subfactor)


State 43

   84 Subfactor: INTLIT .

    $default  reduce using rule 84 (Subfactor)


State 44

   90 ExprOptional: Epsilon .

    $default  reduce using rule 90 (ExprOptional)


State 45

    9 FunctionBody: LBRACE Declaration . Declaration_ GoodStatement Statement_ RBRACE
   11             | LBRACE Declaration . Declaration_ RBRACE

    error  shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    AMP     reduce using rule 2 (Epsilon)
    AST     reduce using rule 2 (Epsilon)
    FOR     reduce using rule 2 (Epsilon)
    IF      reduce using rule 2 (Epsilon)
    LBRACE  reduce using rule 2 (Epsilon)
    LPAR    reduce using rule 2 (Epsilon)
    MINUS   reduce using rule 2 (Epsilon)
    NOT     reduce using rule 2 (Epsilon)
    PLUS    reduce using rule 2 (Epsilon)
    RBRACE  reduce using rule 2 (Epsilon)
    RETURN  reduce using rule 2 (Epsilon)
    SEMI    reduce using rule 2 (Epsilon)
    ID      reduce using rule 2 (Epsilon)
    STRLIT  reduce using rule 2 (Epsilon)
    CHRLIT  reduce using rule 2 (Epsilon)
    INTLIT  reduce using rule 2 (Epsilon)

    Epsilon       go to state 83
    Declaration   go to state 84
    Declaration_  go to state 85
    TypeSpec      go to state 46


State 46

   20 Declaration: TypeSpec . Declarator Declarator_ SEMI

    $default  reduce using rule 2 (Epsilon)

    Epsilon     go to state 16
    Declarator  go to state 18
    Ast_        go to state 86


State 47

   10 FunctionBody: LBRACE GoodStatement . Statement_ RBRACE

    error   shift, and go to state 87
    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    LBRACE  shift, and go to state 33
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    RETURN  shift, and go to state 39
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    RBRACE  reduce using rule 2 (Epsilon)
    SEMI    reduce using rule 2 (Epsilon)

    Epsilon          go to state 88
    Statement_       go to state 89
    StatementList    go to state 90
    Statement        go to state 74
    GoodStatement    go to state 75
    IfElseStatement  go to state 48
    Expr             go to state 49
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56
    ExprOptional     go to state 57


State 48

   39 GoodStatement: IfElseStatement .

    $default  reduce using rule 39 (GoodStatement)


State 49

   91 ExprOptional: Expr .

    $default  reduce using rule 91 (ExprOptional)


State 50

   46 Expr: CommaExpr . ASSIGN Expr
   47     | CommaExpr .
   56 CommaExpr: CommaExpr . COMMA SingleExpr

    ASSIGN  shift, and go to state 91
    COMMA   shift, and go to state 92

    $default  reduce using rule 47 (Expr)


State 51

   57 CommaExpr: SingleExpr .
   58 SingleExpr: SingleExpr . AND BinaryExpr
   59           | SingleExpr . OR BinaryExpr

    AND  shift, and go to state 93
    OR   shift, and go to state 94

    $default  reduce using rule 57 (CommaExpr)


State 52

   60 SingleExpr: BinaryExpr .
   61 BinaryExpr: BinaryExpr . EQ ComparationExpr
   62           | BinaryExpr . NE ComparationExpr
   63           | BinaryExpr . LT ComparationExpr
   64           | BinaryExpr . GT ComparationExpr
   65           | BinaryExpr . LE ComparationExpr
   66           | BinaryExpr . GE ComparationExpr

    EQ  shift, and go to state 95
    GE  shift, and go to state 96
    GT  shift, and go to state 97
    LE  shift, and go to state 98
    LT  shift, and go to state 99
    NE  shift, and go to state 100

    $default  reduce using rule 60 (SingleExpr)


State 53

   67 BinaryExpr: ComparationExpr .
   68 ComparationExpr: ComparationExpr . PLUS Term
   69                | ComparationExpr . MINUS Term

    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102

    $default  reduce using rule 67 (BinaryExpr)


State 54

   70 ComparationExpr: Term .

    $default  reduce using rule 70 (ComparationExpr)


State 55

   71 Term: Factor . AST Term
   72     | Factor . DIV Term
   73     | Factor . MOD Term
   74     | Factor .

    AST  shift, and go to state 103
    DIV  shift, and go to state 104
    MOD  shift, and go to state 105

    $default  reduce using rule 74 (Term)


State 56

   80 Factor: Subfactor .
   81 Subfactor: Subfactor . LSQ Expr RSQ

    LSQ  shift, and go to state 106

    $default  reduce using rule 80 (Factor)


State 57

   37 GoodStatement: ExprOptional . SEMI

    SEMI  shift, and go to state 107


State 58

   31 Declarator_: Declarator_ COMMA . Declarator

    $default  reduce using rule 2 (Epsilon)

    Epsilon     go to state 16
    Declarator  go to state 108
    Ast_        go to state 86


State 59

   20 Declaration: TypeSpec Declarator Declarator_ SEMI .

    $default  reduce using rule 20 (Declaration)


State 60

   15 FunctionDeclarator: Ast_ ID LPAR . ParameterList RPAR

    CHAR  shift, and go to state 2
    INT   shift, and go to state 3
    VOID  shift, and go to state 4

    ParameterList         go to state 109
    ParameterDeclaration  go to state 110
    TypeSpec              go to state 111


State 61

   29 ArrayOptional: LSQ . INTLIT RSQ

    INTLIT  shift, and go to state 112


State 62

   28 ArrayOptional: Epsilon .

    $default  reduce using rule 28 (ArrayOptional)


State 63

   27 Declarator: Ast_ ID ArrayOptional .

    $default  reduce using rule 27 (Declarator)


State 64

   13 FunctionBody: LBRACE error RBRACE .

    $default  reduce using rule 13 (FunctionBody)


State 65

   87 Subfactor: LPAR . Expr RPAR

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Expr             go to state 77
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 66

   82 Subfactor: ID . LPAR ListExprOptional RPAR
   83          | ID .

    LPAR  shift, and go to state 113

    $default  reduce using rule 83 (Subfactor)


State 67

   75 Factor: AMP Factor .

    $default  reduce using rule 75 (Factor)


State 68

   76 Factor: AST Factor .

    $default  reduce using rule 76 (Factor)


State 69

   40 GoodStatement: FOR LPAR . ExprOptional SEMI ExprOptional SEMI ExprOptional RPAR Statement

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    $default  reduce using rule 2 (Epsilon)

    Epsilon          go to state 44
    Expr             go to state 49
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56
    ExprOptional     go to state 114


State 70

   44 IfElseStatement: IF LPAR . Expr RPAR Statement
   45                | IF LPAR . Expr RPAR Statement ELSE Statement

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Expr             go to state 115
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 71

   35 Statement: error . SEMI
   42 GoodStatement: LBRACE error . RBRACE

    RBRACE  shift, and go to state 116
    SEMI    shift, and go to state 117


State 72

   43 GoodStatement: LBRACE RBRACE .

    $default  reduce using rule 43 (GoodStatement)


State 73

   38 GoodStatement: LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 118


State 74

   34 StatementList: Statement . Statement_

    error   shift, and go to state 87
    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    LBRACE  shift, and go to state 33
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    RETURN  shift, and go to state 39
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    RBRACE  reduce using rule 2 (Epsilon)
    SEMI    reduce using rule 2 (Epsilon)

    Epsilon          go to state 88
    Statement_       go to state 119
    StatementList    go to state 90
    Statement        go to state 74
    GoodStatement    go to state 75
    IfElseStatement  go to state 48
    Expr             go to state 49
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56
    ExprOptional     go to state 57


State 75

   36 Statement: GoodStatement .

    $default  reduce using rule 36 (Statement)


State 76

   49 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 120


State 77

   87 Subfactor: LPAR Expr . RPAR

    RPAR  shift, and go to state 121


State 78

   78 Factor: MINUS Factor .

    $default  reduce using rule 78 (Factor)


State 79

   79 Factor: NOT Factor .

    $default  reduce using rule 79 (Factor)


State 80

   77 Factor: PLUS Factor .

    $default  reduce using rule 77 (Factor)


State 81

   41 GoodStatement: RETURN ExprOptional . SEMI

    SEMI  shift, and go to state 122


State 82

   48 Expr: ID LPAR . error RPAR
   82 Subfactor: ID LPAR . ListExprOptional RPAR

    error   shift, and go to state 123
    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 124
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 125
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    RPAR  reduce using rule 2 (Epsilon)

    Epsilon             go to state 126
    Expr_without_comma  go to state 127
    SingleExpr          go to state 128
    BinaryExpr          go to state 52
    ComparationExpr     go to state 53
    Term                go to state 54
    Factor              go to state 55
    Subfactor           go to state 56
    ListExprOptional    go to state 129


State 83

   22 Declaration_: Epsilon .

    $default  reduce using rule 22 (Declaration_)


State 84

   23 Declaration_: Declaration . Declaration_

    error  shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    AMP     reduce using rule 2 (Epsilon)
    AST     reduce using rule 2 (Epsilon)
    FOR     reduce using rule 2 (Epsilon)
    IF      reduce using rule 2 (Epsilon)
    LBRACE  reduce using rule 2 (Epsilon)
    LPAR    reduce using rule 2 (Epsilon)
    MINUS   reduce using rule 2 (Epsilon)
    NOT     reduce using rule 2 (Epsilon)
    PLUS    reduce using rule 2 (Epsilon)
    RBRACE  reduce using rule 2 (Epsilon)
    RETURN  reduce using rule 2 (Epsilon)
    SEMI    reduce using rule 2 (Epsilon)
    ID      reduce using rule 2 (Epsilon)
    STRLIT  reduce using rule 2 (Epsilon)
    CHRLIT  reduce using rule 2 (Epsilon)
    INTLIT  reduce using rule 2 (Epsilon)

    Epsilon       go to state 83
    Declaration   go to state 84
    Declaration_  go to state 130
    TypeSpec      go to state 46


State 85

    9 FunctionBody: LBRACE Declaration Declaration_ . GoodStatement Statement_ RBRACE
   11             | LBRACE Declaration Declaration_ . RBRACE

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    LBRACE  shift, and go to state 33
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    RBRACE  shift, and go to state 131
    RETURN  shift, and go to state 39
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    $default  reduce using rule 2 (Epsilon)

    Epsilon          go to state 44
    GoodStatement    go to state 132
    IfElseStatement  go to state 48
    Expr             go to state 49
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56
    ExprOptional     go to state 57


State 86

   27 Declarator: Ast_ . ID ArrayOptional
   95 Ast_: Ast_ . AST

    AST  shift, and go to state 26
    ID   shift, and go to state 133


State 87

   35 Statement: error . SEMI

    SEMI  shift, and go to state 117


State 88

   32 Statement_: Epsilon .
   90 ExprOptional: Epsilon .

    SEMI      reduce using rule 90 (ExprOptional)
    $default  reduce using rule 32 (Statement_)


State 89

   10 FunctionBody: LBRACE GoodStatement Statement_ . RBRACE

    RBRACE  shift, and go to state 134


State 90

   33 Statement_: StatementList .

    $default  reduce using rule 33 (Statement_)


State 91

   46 Expr: CommaExpr ASSIGN . Expr

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Expr             go to state 135
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 92

   56 CommaExpr: CommaExpr COMMA . SingleExpr

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    SingleExpr       go to state 136
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 93

   58 SingleExpr: SingleExpr AND . BinaryExpr

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    BinaryExpr       go to state 137
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 94

   59 SingleExpr: SingleExpr OR . BinaryExpr

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    BinaryExpr       go to state 138
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 95

   61 BinaryExpr: BinaryExpr EQ . ComparationExpr

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    ComparationExpr  go to state 139
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 96

   66 BinaryExpr: BinaryExpr GE . ComparationExpr

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    ComparationExpr  go to state 140
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 97

   64 BinaryExpr: BinaryExpr GT . ComparationExpr

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    ComparationExpr  go to state 141
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 98

   65 BinaryExpr: BinaryExpr LE . ComparationExpr

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    ComparationExpr  go to state 142
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 99

   63 BinaryExpr: BinaryExpr LT . ComparationExpr

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    ComparationExpr  go to state 143
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 100

   62 BinaryExpr: BinaryExpr NE . ComparationExpr

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    ComparationExpr  go to state 144
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 101

   69 ComparationExpr: ComparationExpr MINUS . Term

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Term       go to state 145
    Factor     go to state 55
    Subfactor  go to state 56


State 102

   68 ComparationExpr: ComparationExpr PLUS . Term

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Term       go to state 146
    Factor     go to state 55
    Subfactor  go to state 56


State 103

   71 Term: Factor AST . Term

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Term       go to state 147
    Factor     go to state 55
    Subfactor  go to state 56


State 104

   72 Term: Factor DIV . Term

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Term       go to state 148
    Factor     go to state 55
    Subfactor  go to state 56


State 105

   73 Term: Factor MOD . Term

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 65
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 66
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Term       go to state 149
    Factor     go to state 55
    Subfactor  go to state 56


State 106

   81 Subfactor: Subfactor LSQ . Expr RSQ

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Expr             go to state 150
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 107

   37 GoodStatement: ExprOptional SEMI .

    $default  reduce using rule 37 (GoodStatement)


State 108

   31 Declarator_: Declarator_ COMMA Declarator .

    $default  reduce using rule 31 (Declarator_)


State 109

   15 FunctionDeclarator: Ast_ ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 151


State 110

   16 ParameterList: ParameterDeclaration . ParameterDeclaration_

    $default  reduce using rule 2 (Epsilon)

    Epsilon                go to state 152
    ParameterDeclaration_  go to state 153


State 111

   17 ParameterDeclaration: TypeSpec . Ast_ IdOptional

    $default  reduce using rule 2 (Epsilon)

    Epsilon  go to state 16
    Ast_     go to state 154


State 112

   29 ArrayOptional: LSQ INTLIT . RSQ

    RSQ  shift, and go to state 155


State 113

   82 Subfactor: ID LPAR . ListExprOptional RPAR

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 124
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 125
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    $default  reduce using rule 2 (Epsilon)

    Epsilon             go to state 126
    Expr_without_comma  go to state 127
    SingleExpr          go to state 128
    BinaryExpr          go to state 52
    ComparationExpr     go to state 53
    Term                go to state 54
    Factor              go to state 55
    Subfactor           go to state 56
    ListExprOptional    go to state 129


State 114

   40 GoodStatement: FOR LPAR ExprOptional . SEMI ExprOptional SEMI ExprOptional RPAR Statement

    SEMI  shift, and go to state 156


State 115

   44 IfElseStatement: IF LPAR Expr . RPAR Statement
   45                | IF LPAR Expr . RPAR Statement ELSE Statement

    RPAR  shift, and go to state 157


State 116

   42 GoodStatement: LBRACE error RBRACE .

    $default  reduce using rule 42 (GoodStatement)


State 117

   35 Statement: error SEMI .

    $default  reduce using rule 35 (Statement)


State 118

   38 GoodStatement: LBRACE StatementList RBRACE .

    $default  reduce using rule 38 (GoodStatement)


State 119

   34 StatementList: Statement Statement_ .

    $default  reduce using rule 34 (StatementList)


State 120

   49 Expr: LPAR error RPAR .

    $default  reduce using rule 49 (Expr)


State 121

   87 Subfactor: LPAR Expr RPAR .

    $default  reduce using rule 87 (Subfactor)


State 122

   41 GoodStatement: RETURN ExprOptional SEMI .

    $default  reduce using rule 41 (GoodStatement)


State 123

   48 Expr: ID LPAR error . RPAR

    RPAR  shift, and go to state 158


State 124

   51 Expr_without_comma: LPAR . error RPAR
   87 Subfactor: LPAR . Expr RPAR

    error   shift, and go to state 159
    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Expr             go to state 77
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56


State 125

   50 Expr_without_comma: ID . LPAR error RPAR
   82 Subfactor: ID . LPAR ListExprOptional RPAR
   83          | ID .

    LPAR  shift, and go to state 160

    $default  reduce using rule 83 (Subfactor)


State 126

   88 ListExprOptional: Epsilon .

    $default  reduce using rule 88 (ListExprOptional)


State 127

   89 ListExprOptional: Expr_without_comma . Expr_without_comma_

    COMMA  shift, and go to state 161

    $default  reduce using rule 2 (Epsilon)

    Epsilon              go to state 162
    Expr_without_comma_  go to state 163


State 128

   52 Expr_without_comma: SingleExpr .
   53                   | SingleExpr . ASSIGN Expr_without_comma
   58 SingleExpr: SingleExpr . AND BinaryExpr
   59           | SingleExpr . OR BinaryExpr

    AND     shift, and go to state 93
    ASSIGN  shift, and go to state 164
    OR      shift, and go to state 94

    $default  reduce using rule 52 (Expr_without_comma)


State 129

   82 Subfactor: ID LPAR ListExprOptional . RPAR

    RPAR  shift, and go to state 165


State 130

   23 Declaration_: Declaration Declaration_ .

    $default  reduce using rule 23 (Declaration_)


State 131

   11 FunctionBody: LBRACE Declaration Declaration_ RBRACE .

    $default  reduce using rule 11 (FunctionBody)


State 132

    9 FunctionBody: LBRACE Declaration Declaration_ GoodStatement . Statement_ RBRACE

    error   shift, and go to state 87
    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    LBRACE  shift, and go to state 33
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    RETURN  shift, and go to state 39
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    RBRACE  reduce using rule 2 (Epsilon)
    SEMI    reduce using rule 2 (Epsilon)

    Epsilon          go to state 88
    Statement_       go to state 166
    StatementList    go to state 90
    Statement        go to state 74
    GoodStatement    go to state 75
    IfElseStatement  go to state 48
    Expr             go to state 49
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56
    ExprOptional     go to state 57


State 133

   27 Declarator: Ast_ ID . ArrayOptional

    LSQ  shift, and go to state 61

    $default  reduce using rule 2 (Epsilon)

    Epsilon        go to state 62
    ArrayOptional  go to state 63


State 134

   10 FunctionBody: LBRACE GoodStatement Statement_ RBRACE .

    $default  reduce using rule 10 (FunctionBody)


State 135

   46 Expr: CommaExpr ASSIGN Expr .

    $default  reduce using rule 46 (Expr)


State 136

   56 CommaExpr: CommaExpr COMMA SingleExpr .
   58 SingleExpr: SingleExpr . AND BinaryExpr
   59           | SingleExpr . OR BinaryExpr

    AND  shift, and go to state 93
    OR   shift, and go to state 94

    $default  reduce using rule 56 (CommaExpr)


State 137

   58 SingleExpr: SingleExpr AND BinaryExpr .
   61 BinaryExpr: BinaryExpr . EQ ComparationExpr
   62           | BinaryExpr . NE ComparationExpr
   63           | BinaryExpr . LT ComparationExpr
   64           | BinaryExpr . GT ComparationExpr
   65           | BinaryExpr . LE ComparationExpr
   66           | BinaryExpr . GE ComparationExpr

    EQ  shift, and go to state 95
    GE  shift, and go to state 96
    GT  shift, and go to state 97
    LE  shift, and go to state 98
    LT  shift, and go to state 99
    NE  shift, and go to state 100

    $default  reduce using rule 58 (SingleExpr)


State 138

   59 SingleExpr: SingleExpr OR BinaryExpr .
   61 BinaryExpr: BinaryExpr . EQ ComparationExpr
   62           | BinaryExpr . NE ComparationExpr
   63           | BinaryExpr . LT ComparationExpr
   64           | BinaryExpr . GT ComparationExpr
   65           | BinaryExpr . LE ComparationExpr
   66           | BinaryExpr . GE ComparationExpr

    EQ  shift, and go to state 95
    GE  shift, and go to state 96
    GT  shift, and go to state 97
    LE  shift, and go to state 98
    LT  shift, and go to state 99
    NE  shift, and go to state 100

    $default  reduce using rule 59 (SingleExpr)


State 139

   61 BinaryExpr: BinaryExpr EQ ComparationExpr .
   68 ComparationExpr: ComparationExpr . PLUS Term
   69                | ComparationExpr . MINUS Term

    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102

    $default  reduce using rule 61 (BinaryExpr)


State 140

   66 BinaryExpr: BinaryExpr GE ComparationExpr .
   68 ComparationExpr: ComparationExpr . PLUS Term
   69                | ComparationExpr . MINUS Term

    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102

    $default  reduce using rule 66 (BinaryExpr)


State 141

   64 BinaryExpr: BinaryExpr GT ComparationExpr .
   68 ComparationExpr: ComparationExpr . PLUS Term
   69                | ComparationExpr . MINUS Term

    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102

    $default  reduce using rule 64 (BinaryExpr)


State 142

   65 BinaryExpr: BinaryExpr LE ComparationExpr .
   68 ComparationExpr: ComparationExpr . PLUS Term
   69                | ComparationExpr . MINUS Term

    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102

    $default  reduce using rule 65 (BinaryExpr)


State 143

   63 BinaryExpr: BinaryExpr LT ComparationExpr .
   68 ComparationExpr: ComparationExpr . PLUS Term
   69                | ComparationExpr . MINUS Term

    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102

    $default  reduce using rule 63 (BinaryExpr)


State 144

   62 BinaryExpr: BinaryExpr NE ComparationExpr .
   68 ComparationExpr: ComparationExpr . PLUS Term
   69                | ComparationExpr . MINUS Term

    MINUS  shift, and go to state 101
    PLUS   shift, and go to state 102

    $default  reduce using rule 62 (BinaryExpr)


State 145

   69 ComparationExpr: ComparationExpr MINUS Term .

    $default  reduce using rule 69 (ComparationExpr)


State 146

   68 ComparationExpr: ComparationExpr PLUS Term .

    $default  reduce using rule 68 (ComparationExpr)


State 147

   71 Term: Factor AST Term .

    $default  reduce using rule 71 (Term)


State 148

   72 Term: Factor DIV Term .

    $default  reduce using rule 72 (Term)


State 149

   73 Term: Factor MOD Term .

    $default  reduce using rule 73 (Term)


State 150

   81 Subfactor: Subfactor LSQ Expr . RSQ

    RSQ  shift, and go to state 167


State 151

   15 FunctionDeclarator: Ast_ ID LPAR ParameterList RPAR .

    $default  reduce using rule 15 (FunctionDeclarator)


State 152

   18 ParameterDeclaration_: Epsilon .

    $default  reduce using rule 18 (ParameterDeclaration_)


State 153

   16 ParameterList: ParameterDeclaration ParameterDeclaration_ .
   19 ParameterDeclaration_: ParameterDeclaration_ . COMMA ParameterDeclaration

    COMMA  shift, and go to state 168

    $default  reduce using rule 16 (ParameterList)


State 154

   17 ParameterDeclaration: TypeSpec Ast_ . IdOptional
   95 Ast_: Ast_ . AST

    AST  shift, and go to state 26
    ID   shift, and go to state 169

    $default  reduce using rule 2 (Epsilon)

    Epsilon     go to state 170
    IdOptional  go to state 171


State 155

   29 ArrayOptional: LSQ INTLIT RSQ .

    $default  reduce using rule 29 (ArrayOptional)


State 156

   40 GoodStatement: FOR LPAR ExprOptional SEMI . ExprOptional SEMI ExprOptional RPAR Statement

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    $default  reduce using rule 2 (Epsilon)

    Epsilon          go to state 44
    Expr             go to state 49
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56
    ExprOptional     go to state 172


State 157

   44 IfElseStatement: IF LPAR Expr RPAR . Statement
   45                | IF LPAR Expr RPAR . Statement ELSE Statement

    error   shift, and go to state 87
    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    LBRACE  shift, and go to state 33
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    RETURN  shift, and go to state 39
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    SEMI  reduce using rule 2 (Epsilon)

    Epsilon          go to state 44
    Statement        go to state 173
    GoodStatement    go to state 75
    IfElseStatement  go to state 48
    Expr             go to state 49
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56
    ExprOptional     go to state 57


State 158

   48 Expr: ID LPAR error RPAR .

    $default  reduce using rule 48 (Expr)


State 159

   51 Expr_without_comma: LPAR error . RPAR

    RPAR  shift, and go to state 174


State 160

   50 Expr_without_comma: ID LPAR . error RPAR
   82 Subfactor: ID LPAR . ListExprOptional RPAR

    error   shift, and go to state 175
    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 124
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 125
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    RPAR  reduce using rule 2 (Epsilon)

    Epsilon             go to state 126
    Expr_without_comma  go to state 127
    SingleExpr          go to state 128
    BinaryExpr          go to state 52
    ComparationExpr     go to state 53
    Term                go to state 54
    Factor              go to state 55
    Subfactor           go to state 56
    ListExprOptional    go to state 129


State 161

   55 Expr_without_comma_: COMMA . Expr_without_comma

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 124
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 125
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Expr_without_comma  go to state 176
    SingleExpr          go to state 128
    BinaryExpr          go to state 52
    ComparationExpr     go to state 53
    Term                go to state 54
    Factor              go to state 55
    Subfactor           go to state 56


State 162

   54 Expr_without_comma_: Epsilon .

    $default  reduce using rule 54 (Expr_without_comma_)


State 163

   89 ListExprOptional: Expr_without_comma Expr_without_comma_ .

    $default  reduce using rule 89 (ListExprOptional)


State 164

   53 Expr_without_comma: SingleExpr ASSIGN . Expr_without_comma

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 124
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 125
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    Expr_without_comma  go to state 177
    SingleExpr          go to state 128
    BinaryExpr          go to state 52
    ComparationExpr     go to state 53
    Term                go to state 54
    Factor              go to state 55
    Subfactor           go to state 56


State 165

   82 Subfactor: ID LPAR ListExprOptional RPAR .

    $default  reduce using rule 82 (Subfactor)


State 166

    9 FunctionBody: LBRACE Declaration Declaration_ GoodStatement Statement_ . RBRACE

    RBRACE  shift, and go to state 178


State 167

   81 Subfactor: Subfactor LSQ Expr RSQ .

    $default  reduce using rule 81 (Subfactor)


State 168

   19 ParameterDeclaration_: ParameterDeclaration_ COMMA . ParameterDeclaration

    CHAR  shift, and go to state 2
    INT   shift, and go to state 3
    VOID  shift, and go to state 4

    ParameterDeclaration  go to state 179
    TypeSpec              go to state 111


State 169

   93 IdOptional: ID .

    $default  reduce using rule 93 (IdOptional)


State 170

   92 IdOptional: Epsilon .

    $default  reduce using rule 92 (IdOptional)


State 171

   17 ParameterDeclaration: TypeSpec Ast_ IdOptional .

    $default  reduce using rule 17 (ParameterDeclaration)


State 172

   40 GoodStatement: FOR LPAR ExprOptional SEMI ExprOptional . SEMI ExprOptional RPAR Statement

    SEMI  shift, and go to state 180


State 173

   44 IfElseStatement: IF LPAR Expr RPAR Statement .
   45                | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 181

    $default  reduce using rule 44 (IfElseStatement)


State 174

   51 Expr_without_comma: LPAR error RPAR .

    $default  reduce using rule 51 (Expr_without_comma)


State 175

   50 Expr_without_comma: ID LPAR error . RPAR

    RPAR  shift, and go to state 182


State 176

   55 Expr_without_comma_: COMMA Expr_without_comma .

    $default  reduce using rule 55 (Expr_without_comma_)


State 177

   53 Expr_without_comma: SingleExpr ASSIGN Expr_without_comma .

    $default  reduce using rule 53 (Expr_without_comma)


State 178

    9 FunctionBody: LBRACE Declaration Declaration_ GoodStatement Statement_ RBRACE .

    $default  reduce using rule 9 (FunctionBody)


State 179

   19 ParameterDeclaration_: ParameterDeclaration_ COMMA ParameterDeclaration .

    $default  reduce using rule 19 (ParameterDeclaration_)


State 180

   40 GoodStatement: FOR LPAR ExprOptional SEMI ExprOptional SEMI . ExprOptional RPAR Statement

    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    $default  reduce using rule 2 (Epsilon)

    Epsilon          go to state 44
    Expr             go to state 49
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56
    ExprOptional     go to state 183


State 181

   45 IfElseStatement: IF LPAR Expr RPAR Statement ELSE . Statement

    error   shift, and go to state 87
    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    LBRACE  shift, and go to state 33
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    RETURN  shift, and go to state 39
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    SEMI  reduce using rule 2 (Epsilon)

    Epsilon          go to state 44
    Statement        go to state 184
    GoodStatement    go to state 75
    IfElseStatement  go to state 48
    Expr             go to state 49
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56
    ExprOptional     go to state 57


State 182

   50 Expr_without_comma: ID LPAR error RPAR .

    $default  reduce using rule 50 (Expr_without_comma)


State 183

   40 GoodStatement: FOR LPAR ExprOptional SEMI ExprOptional SEMI ExprOptional . RPAR Statement

    RPAR  shift, and go to state 185


State 184

   45 IfElseStatement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 45 (IfElseStatement)


State 185

   40 GoodStatement: FOR LPAR ExprOptional SEMI ExprOptional SEMI ExprOptional RPAR . Statement

    error   shift, and go to state 87
    AMP     shift, and go to state 29
    AST     shift, and go to state 30
    FOR     shift, and go to state 31
    IF      shift, and go to state 32
    LBRACE  shift, and go to state 33
    LPAR    shift, and go to state 34
    MINUS   shift, and go to state 35
    NOT     shift, and go to state 36
    PLUS    shift, and go to state 37
    RETURN  shift, and go to state 39
    ID      shift, and go to state 40
    STRLIT  shift, and go to state 41
    CHRLIT  shift, and go to state 42
    INTLIT  shift, and go to state 43

    SEMI  reduce using rule 2 (Epsilon)

    Epsilon          go to state 44
    Statement        go to state 186
    GoodStatement    go to state 75
    IfElseStatement  go to state 48
    Expr             go to state 49
    CommaExpr        go to state 50
    SingleExpr       go to state 51
    BinaryExpr       go to state 52
    ComparationExpr  go to state 53
    Term             go to state 54
    Factor           go to state 55
    Subfactor        go to state 56
    ExprOptional     go to state 57


State 186

   40 GoodStatement: FOR LPAR ExprOptional SEMI ExprOptional SEMI ExprOptional RPAR Statement .

    $default  reduce using rule 40 (GoodStatement)
